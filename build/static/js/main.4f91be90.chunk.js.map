{"version":3,"sources":["Components/Note.js","Components/Notification.js","services/notes.js","Components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","axios","get","then","response","data","newObject","post","id","changedNote","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","notesToShow","filter","toggleImportanceOf","find","n","noteService","updatedNote","map","catch","error","setTimeout","useEffect","serverNotes","addNote","event","preventDefault","noteObject","length","date","Date","toISOString","Math","random","concat","onSubmit","onChange","target","value","placeholder","type","key","ReactDOM","render","document","getElementById"],"mappings":"gQAceA,EAZF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACjB,oBAAsB,gBAExB,OACG,wBAAIC,UAAU,QACVJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCO9BK,G,MAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,OAAe,OAAZA,EACO,KAGP,yBAAKJ,UAAU,iBACXI,K,gBCQK,EAhBA,WAEZ,OADgBC,IAAMC,IAHT,UAIEC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc7B,EAXA,SAAAC,GAEZ,OADgBL,IAAMM,KART,SAQuBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS7B,EANA,SAACG,EAAIC,GAEjB,OADgBR,IAAMS,IAAN,UAbH,SAaG,YAAwBF,GAAMC,GAE7CN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,oOCV9B,IAAMM,EAAS,WAOZ,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGA+FQC,EA1FH,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,OAEeF,mBAAS,IAFxB,mBAERG,EAFQ,KAECC,EAFD,OAGeJ,oBAAS,GAHxB,mBAGRK,EAHQ,KAGCC,EAHD,OAIyBN,mBAAS,MAJlC,mBAIRO,EAJQ,KAIMC,EAJN,KAMTC,EAAcJ,EAClBJ,EACAA,EAAMS,QAAO,SAAAnC,GAAI,OAAIA,EAAKG,aAUrBiC,EAAqB,SAAApB,GACxB,IAAMhB,EAAO0B,EAAMW,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCC,E,yVAAW,IAAOjB,EAAP,CAAaG,WAAYH,EAAKG,YAE/CoC,EACUvB,EAAIC,GACXN,MAAK,SAAA6B,GACHb,EAASD,EAAMe,KAAI,SAAAzC,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAOwC,SAErDE,OAAM,SAAAC,GACJV,EAAgB,SAAD,OACHjC,EAAKK,QADF,0CAGfuC,YAAW,WACRX,EAAgB,QAChB,KACHN,EAASD,EAAMS,QAAO,SAAAG,GAAC,OAAIA,EAAEtB,KAAOA,UAI5C6B,qBA5BY,WACVN,IAEI5B,MAAK,SAAAmC,GACHnB,EAASmB,QAwBD,IAEjB,IAQMC,EAAU,SAACC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CAChBlC,GAAIU,EAAMyB,OAAS,EACnB9C,QAASuB,EACTwB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAE9BjB,EACWW,GACPvC,MAAK,SAAAiB,GACHD,EAASD,EAAM+B,OAAO7B,IACtBC,EAAW,QAQpB,OACG,yBAAKzB,UAAU,aACZ,wBAAIA,UAAU,aAAd,SACA,yBAAKA,UAAU,kBACZ,4BAAQE,QAAS,kBAAMyB,GAAYD,KAAnC,QACSA,EAAU,YAAc,QAGpC,kBAAC,EAAD,CAActB,QAASwB,IACvB,0BAAM0B,SAAUX,EAAS3C,UAAU,YAChC,2BAAOuD,SAdS,SAACX,GACvBnB,EAAWmB,EAAMY,OAAOC,QAcfC,YAAY,kBAAkBD,MAAOjC,IACxC,4BAAQmC,KAAK,SAASzD,QAASyC,GAA/B,SAEH,wBAAI3C,UAAU,YAzCjB8B,EAAYO,KAAI,SAAAzC,GAAI,OACjB,kBAAC,EAAD,CAAMgE,IAAKhE,EAAKgB,GACbhB,KAAMA,EACNC,iBAAkB,kBAAMmC,EAAmBpC,EAAKgB,WAyCnD,kBAAC,EAAD,QCtGTiD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4f91be90.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({note, toggleImportance }) => {\r\n   const label = note.important \r\n   ? 'set not important' : 'set important'\r\n\r\n   return (\r\n      <li className=\"note\">\r\n         {note.content}\r\n         <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n   )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport './Notification.css'\r\n\r\n// import { Container } from './styles';\r\n\r\nconst Notification = ({message}) => {\r\n   if(message === null) {\r\n      return null;\r\n   }\r\n   return (\r\n      <div className=\"error-message\">\r\n         {message}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Notification;\r\n","import axios from 'axios'\r\nconst baseUrl = '/notes'\r\n\r\nconst getAll = () => {\r\n   const request = axios.get(baseUrl);\r\n   return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n   const request = axios.post(baseUrl, newObject);\r\n   return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, changedNote) => {\r\n   const request = axios.put(`${baseUrl}/${id}`, changedNote);\r\n   return request\r\n   .then(response => response.data); //returns response.data \r\n}\r\n\r\nexport default { getAll, create, update };","import React, { useState, useEffect } from 'react';\r\nimport Note from './Note';\r\nimport Notification from './Notification'\r\nimport noteService from '../services/notes';\r\nimport './App.css'\r\n\r\nconst Footer = () => {\r\n   const footerStyle = {\r\n     color: 'green',\r\n     fontStyle: 'italic',\r\n     fontSize: 16\r\n   }\r\n \r\n   return (\r\n     <div style={footerStyle}>\r\n       <br />\r\n       <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n     </div> \r\n   )\r\n }\r\n\r\nconst App = () => {\r\n   const [notes, setNotes] = useState([]);\r\n   const [newNote, setNewNote] = useState('');\r\n   const [showAll, setShowAll] = useState(true);\r\n   const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n   const notesToShow = showAll \r\n   ? notes \r\n   : notes.filter(note => note.important)\r\n\r\n   const hook = () => {\r\n      noteService\r\n         .getAll()\r\n         .then(serverNotes => {\r\n            setNotes(serverNotes)\r\n         });\r\n    }\r\n\r\n    const toggleImportanceOf = id => {\r\n       const note = notes.find(n => n.id === id);\r\n       const changedNote = {...note, important: !note.important};\r\n\r\n       noteService\r\n         .update(id, changedNote)\r\n         .then(updatedNote => {\r\n            setNotes(notes.map(note => note.id !== id ? note : updatedNote));\r\n         })\r\n         .catch(error => {\r\n            setErrorMessage(\r\n               `Note '${note.content}' was already removed from the server`\r\n            )\r\n            setTimeout(() => {\r\n               setErrorMessage(null)\r\n            }, 5000);\r\n            setNotes(notes.filter(n => n.id !== id));\r\n         });\r\n    }\r\n\r\n    useEffect(hook, []);\r\n\r\n   const rows = () =>\r\n      notesToShow.map(note =>\r\n         <Note key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n         />\r\n      )\r\n\r\n   const addNote = (event) => {\r\n      event.preventDefault();\r\n      const noteObject = {\r\n         id: notes.length + 1,\r\n         content: newNote,\r\n         date: new Date().toISOString(),\r\n         important: Math.random() > 0.5,\r\n      }\r\n      noteService\r\n         .create(noteObject)\r\n         .then(newNote => {\r\n            setNotes(notes.concat(newNote));\r\n            setNewNote('');\r\n         });\r\n   }\r\n\r\n   const handleNoteChange = (event) => {\r\n      setNewNote(event.target.value);\r\n   }\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         <h1 className=\"title-box\">Notes</h1>\r\n         <div className=\"show-important\">\r\n            <button onClick={() => setShowAll(!showAll)}>\r\n               show {showAll ? 'important' : 'all'}\r\n            </button>\r\n         </div>\r\n         <Notification message={errorMessage}/>\r\n         <form onSubmit={addNote} className=\"new-note\">\r\n            <input onChange={handleNoteChange}\r\n               placeholder=\"Type a new note\" value={newNote} />\r\n            <button type=\"submit\" onClick={addNote}>Send</button>\r\n         </form>\r\n         <ul className=\"note-box\">\r\n            {rows()}\r\n         </ul>\r\n         <Footer />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}